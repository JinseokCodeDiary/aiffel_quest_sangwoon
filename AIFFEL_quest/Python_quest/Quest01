{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/chocoelf/aiffel_quest/blob/main/AIFFEL_quest/Python_quest/Quest01\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 122
        },
        "id": "umw1bpqWHQUT",
        "outputId": "06c642f5-8b96-4cbf-9693-0ae2cbb030c0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "단어를 입력 하세요. 감사합니다\n",
            "뒤집힌 단어는 : 다니합사감\n",
            "입력된 단어는 회문이 아닙니다.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "' 회고\\n 임상운: 저는 일단 처음에 제가 생각한 방식이 안되어서 좀 당황 했습니다. 그런데\\n        준오님이 해결책을 가져오셔서 그 방법대로 하니까 작동이 되서 제가 생각\\n        한 방식과 다른 방식을 배운 것 같습니다. 설명까지 직접 자세히 들으니 문제\\n        를 해결하는데는 다양한 방식이 있다는 것을 알았습니다.\\n\\n 이준오 : 처음에 생각이 잘 떠오르지 않아서 조금 막막했는데, 상운님과 의견을 나누고\\n          공유하면서 막힌 부분을 해결할 수 있었습니다. 혼자서 할 때는 생각을 전환하기\\n          쉽지 않은데 대화하면서 코드리뷰를 하니 아이디어를 떠올리기 좀 더 수월했던 것 같습니다.\\n'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 13
        }
      ],
      "source": [
        "# 단어를 입력받습니다.\n",
        "word = input(\"단어를 입력 하세요. \")\n",
        "\n",
        "#단어가 맞는지 확인 할 변수 선언\n",
        "isPalindrome = True\n",
        "\n",
        "# 리스트로 변환\n",
        "myList = list(word)\n",
        "emptyList = []\n",
        "\n",
        "# 문장 뒤집기\n",
        "for i in myList:        # 리스트\n",
        "  emptyList.insert(-len(emptyList), i)\n",
        "\n",
        "'''if word ==  str(emptyList):\n",
        "  print(\"회문 입니다.\")\n",
        "else:\n",
        "  print(\"회문이 아닙니다.\")'''\n",
        "\n",
        "# print(word == '우영우')\n",
        "# print(emptyList)\n",
        "\n",
        "# word[0] 과   word[-1-0] 비교 ->   ex  A,B,C,D,A   ->   word[0] = A,      word[-1] = A\n",
        "# i = 0, 1, 2         5 / 2    2       .5\n",
        "'''\n",
        "회문이란? 앞에서부터 읽어도 같고, 뒤에서부터 읽어도 같은 단어, 구, 문장, 숫자 혹은 문단인\n",
        "* 인덱스 i : 입력받은 word의 인덱스 및 for문의 반복횟수를 나타내는 변수\n",
        "* range(len(word) // 2) : 회문 판별에서, 판별하고자 하는 문자열의 가장 앞, 뒤에서부터 한 글자씩 비교를 하므로,\n",
        "                          모든 인덱스에 대해 반복하지 않고 문자열의 가운데를 기준으로 나눕니다.\n",
        "'''\n",
        "for i in range (len(word) // 2):\n",
        "    if word[i] != word[-1-i]:         # 문자열의 가장 앞 글자와 맨 뒤 글자가 같은지 비교합니다.\n",
        "        isPalindrome = False\n",
        "        break\n",
        "# r a d a r\n",
        "# l e v e l\n",
        "\n",
        "# 리스트로 된 문장을 다시 string으로 변환\n",
        "# result = ''.join(map(str, emptyList))\n",
        "result = ''\n",
        "for i in emptyList:\n",
        "  result += i\n",
        "\n",
        "print(\"뒤집힌 단어는 :\", result)\n",
        "\n",
        "if (isPalindrome):\n",
        "  print(\"입력된 단어는 회문입니다.\")\n",
        "else:\n",
        "  print(\"입력된 단어는 회문이 아닙니다.\")\n",
        "\n",
        "''' 회고\n",
        " 임상운: 저는 일단 처음에 제가 생각한 방식이 안되어서 좀 당황 했습니다. 그런데\n",
        "        준오님이 해결책을 가져오셔서 그 방법대로 하니까 작동이 되서 제가 생각\n",
        "        한 방식과 다른 방식을 배운 것 같습니다. 설명까지 직접 자세히 들으니 문제\n",
        "        를 해결하는데는 다양한 방식이 있다는 것을 알았습니다.\n",
        "\n",
        " 이준오 : 처음에 생각이 잘 떠오르지 않아서 조금 막막했는데, 상운님과 의견을 나누고\n",
        "          공유하면서 막힌 부분을 해결할 수 있었습니다. 혼자서 할 때는 생각을 전환하기\n",
        "          쉽지 않은데 대화하면서 코드리뷰를 하니 아이디어를 떠올리기 좀 더 수월했던 것 같습니다.\n",
        "'''\n"
      ]
    }
  ]
}